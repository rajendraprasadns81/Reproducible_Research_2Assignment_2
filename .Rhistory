debug(ls)
ls()
ls()
x1 <- rnorm(10)
x2 <- rnorm(10)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
y <- rnorm(10)
Rprof()
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
summaryRprof()
summaryRprof(lm)
summaryRprof()
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
summaryRprof()
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pwd()
cov = c(1, 0, 0, 1)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 500)
image(bivn.kde); contour(bivn.kde, add = T)
library(MASS)
cov = c(1, 0, 0, 1)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 500)
image(bivn.kde); contour(bivn.kde, add = T)
library(MASS)
cov = c(1, 0, 0, 1)
bivn <- mvrnorm(10000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 500)
image(bivn.kde); contour(bivn.kde, add = T)
library(MASS)
cov = c(1, 0, 0, 1)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 50)
image(bivn.kde); contour(bivn.kde, add = T)
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 500)
library(MASS)
cov = c(1, 0, 0, 1)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 500)
image(bivn.kde); contour(bivn.kde, add = T)
library(MASS)
cov = c(1, 0, 0, 1)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 1000)
image(bivn.kde); contour(bivn.kde, add = T)
library(MASS)
cov = c(1, 0, 0, 1)
bivn <- mvrnorm(10000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 1000)
image(bivn.kde); contour(bivn.kde, add = T)
library(MASS)
cov = c(1, 0, 0, 1)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 100)
image(bivn.kde); contour(bivn.kde, add = T)
library(MASS)
cov = c(1, 1, 1, 1)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 100)
image(bivn.kde); contour(bivn.kde, add = T)
library(MASS)
cov = c(1, 2, 2, 1)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 100)
image(bivn.kde); contour(bivn.kde, add = T)
library(MASS)
cov = c(1, 0.5, 0.5, 1)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 100)
image(bivn.kde); contour(bivn.kde, add = T)
library(MASS)
cov = c(1, 0, 0, 1)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 100)
image(bivn.kde); contour(bivn.kde, add = T)
library(MASS)
cov = c(1, 0, 0, 2)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 100)
image(bivn.kde); contour(bivn.kde, add = T)
library(MASS)
cov = c(1, 0, 0, 3)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 100)
image(bivn.kde); contour(bivn.kde, add = T)
library(MASS)
cov = c(1, 0, 0, 10)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 100)
image(bivn.kde); contour(bivn.kde, add = T)
library(MASS)
cov = c(1, 0, 0, 10)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 100)
image(bivn.kde);
library(MASS)
cov = c(1, 0, 0, 1)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 100)
image(bivn.kde);
library(MASS)
cov = c(1, 0, 0, 1)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 100)
image(bivn.kde);
axis(1, at = seq(-3, 3, 1))
library(MASS)
cov = c(1, 0, 0, 1)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 100)
image(bivn.kde);
axis(1, at = seq(-3, 3, 1))
axis(2, at = seq(-3, 3, 1))
library(MASS)
cov = c(1, 0, 0, 1)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 100)
image(bivn.kde);
axis(1, at = seq(-6, 6, 1))
axis(2, at = seq(-6, 6, 1))
library(MASS)
cov = c(1, 0, 0, 2)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 100)
image(bivn.kde);
axis(1, at = seq(-6, 6, 1))
axis(2, at = seq(-6, 6, 1))
library(MASS)
cov = c(1, 0, 0, 3)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 100)
image(bivn.kde);
axis(1, at = seq(-6, 6, 1))
axis(2, at = seq(-6, 6, 1))
library(MASS)
cov = c(1, 0, 0, 4)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 100)
image(bivn.kde);
axis(1, at = seq(-6, 6, 1))
axis(2, at = seq(-6, 6, 1))
library(MASS)
cov = c(1, 0, 0, 5)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 100)
image(bivn.kde);
axis(1, at = seq(-6, 6, 1))
axis(2, at = seq(-6, 6, 1))
library(MASS)
cov = c(1, 0, 0, 6)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 100)
image(bivn.kde);
axis(1, at = seq(-6, 6, 1))
axis(2, at = seq(-6, 6, 1))
library(MASS)
cov = c(1, 0, 0, 1)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 100)
image(bivn.kde);
axis(1, at = seq(-6, 6, 1))
axis(2, at = seq(-6, 6, 1))
library(MASS)
cov = c(1, 0, 0, 3)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 100)
image(bivn.kde);
axis(1, at = seq(-6, 6, 1))
axis(2, at = seq(-6, 6, 1))
library(MASS)
cov = c(1, 0, 0, 6)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 100)
image(bivn.kde);
axis(1, at = seq(-6, 6, 1))
axis(2, at = seq(-6, 6, 1))
library(MASS)
cov = c(1, 0.5, 0.5, 1)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 100)
image(bivn.kde);
axis(1, at = seq(-6, 6, 1))
axis(2, at = seq(-6, 6, 1))
library(MASS)
cov = c(1, 1, 1, 1)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 100)
image(bivn.kde);
axis(1, at = seq(-6, 6, 1))
axis(2, at = seq(-6, 6, 1))
library(MASS)
cov = c(1, -0.5, -0.5, 1)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(cov, 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 100)
image(bivn.kde);
axis(1, at = seq(-6, 6, 1))
axis(2, at = seq(-6, 6, 1))
x = 1:10
x
rnorm(10)
rnorm(10, 10, 2)
rep(10, 10)
x <- 1:10
y1 = rnorm(10, 10, 2)
y2 = c(10, 1, 1, 1, 1, 1, 1, 1, 1, 1)
y3 = rnorm(10, 1, 2)
y4 = rep(10, 10)
par(mfrow = c(2,2))
plot(x, y1, main="Thời gian nếu vẽ bằng chuột")
plot(x, y2, main="Thời gian chụp + code")
plot(x, y3, main="Độ đẹp nếu vẽ bằng chuột")
plot(x, y4, main="Độ đẹp chụp + code")
x <- 1:10
y1 = rnorm(10, 8, 2)
y2 = c(10, 1, 1, 1, 1, 1, 1, 1, 1, 1)
y3 = rnorm(10, 1, 2)
y4 = rep(10, 10)
par(mfrow = c(2,2))
plot(x, y1, ylim=c(0,10), main="Thời gian nếu vẽ bằng chuột")
plot(x, y2, ylim=c(0,10), main="Thời gian chụp + code")
plot(x, y3, ylim=c(0,10), main="Độ đẹp nếu vẽ bằng chuột")
plot(x, y4, ylim=c(0,10), main="Độ đẹp chụp + code")
x <- 1:10
y1 = rnorm(10, 8, 2)
y2 = c(10, 1, 1, 1, 1, 1, 1, 1, 1, 1)
y3 = rnorm(10, 1, 2)
y4 = rep(10, 10)
par(mfrow = c(2,2))
plot(x, y1, ylim=c(0,10), type="line", main="Thời gian nếu vẽ bằng chuột")
plot(x, y2, ylim=c(0,10), main="Thời gian chụp + code")
plot(x, y3, ylim=c(0,10), main="Độ đẹp nếu vẽ bằng chuột")
plot(x, y4, ylim=c(0,10), main="Độ đẹp chụp + code")
x <- 1:10
y1 = rnorm(10, 8, 1)
y2 = c(10, 1, 1, 1, 1, 1, 1, 1, 1, 1)
y3 = rnorm(10, 1, 2)
y4 = rep(10, 10)
par(mfrow = c(2,2))
plot(x, y1, ylim=c(0,10), type="line", main="Thời gian nếu vẽ bằng chuột")
plot(x, y2, ylim=c(0,10), main="Thời gian chụp + code")
plot(x, y3, ylim=c(0,10), main="Độ đẹp nếu vẽ bằng chuột")
plot(x, y4, ylim=c(0,10), main="Độ đẹp chụp + code")
x <- 1:10
y1 = rnorm(10, 8, 1)
y2 = c(10, 1, 1, 1, 1, 1, 1, 1, 1, 1)
y3 = rnorm(10, 1, 2)
y4 = rep(10, 10)
par(mfrow = c(2,2))
plot(x, y1, ylim=c(0,10), type="line", main="Thời gian nếu vẽ bằng chuột")
plot(x, y2, ylim=c(0,10), type="line", main="Thời gian chụp + code")
plot(x, y3, ylim=c(0,10), type="line", main="Độ đẹp nếu vẽ bằng chuột")
plot(x, y4, ylim=c(0,10), type="line", main="Độ đẹp chụp + code")
x <- 1:10
y1 = rnorm(10, 8, 1)
y2 = c(10, 1, 1, 1, 1, 1, 1, 1, 1, 1)
y3 = rnorm(10, 1, 1)
y4 = rep(10, 10)
par(mfrow = c(2,2))
plot(x, y1, ylim=c(0,10), type="line", main="Thời gian nếu vẽ bằng chuột")
plot(x, y2, ylim=c(0,10), type="line", main="Thời gian chụp + code")
plot(x, y3, ylim=c(0,10), type="line", main="Độ đẹp nếu vẽ bằng chuột")
plot(x, y4, ylim=c(0,10), type="line", main="Độ đẹp chụp + code")
x <- 1:10
y1 = rnorm(10, 8, 1)
y2 = c(10, 1, 1, 1, 1, 1, 1, 1, 1, 1)
y3 = rnorm(10, 1, 0.5)
y4 = rep(10, 10)
par(mfrow = c(2,2))
plot(x, y1, ylim=c(0,10), type="line", main="Thời gian nếu vẽ bằng chuột")
plot(x, y2, ylim=c(0,10), type="line", main="Thời gian chụp + code")
plot(x, y3, ylim=c(0,10), type="line", main="Độ đẹp nếu vẽ bằng chuột")
plot(x, y4, ylim=c(0,10), type="line", main="Độ đẹp chụp + code")
x <- 1:10
y1 = rnorm(10, 8, 1)
y2 = c(10, 1, 1, 1, 1, 1, 1, 1, 1, 1)
y3 = rnorm(10, 1, 0.5)
y4 = rep(9, 10)
par(mfrow = c(2,2))
plot(x, y1, ylim=c(0,10), type="line", main="Thời gian nếu vẽ bằng chuột")
plot(x, y2, ylim=c(0,10), type="line", main="Thời gian chụp + code")
plot(x, y3, ylim=c(0,10), type="line", main="Độ đẹp nếu vẽ bằng chuột")
plot(x, y4, ylim=c(0,10), type="line", main="Độ đẹp chụp + code")
x <- 1:10
y1 = rnorm(10, 8, 1)
y2 = c(10, 1, 1, 1, 1, 1, 1, 1, 1, 1)
y3 = rnorm(10, 1, 0.5)
y4 = rep(9, 10)
par(mfrow = c(2,2))
plot(x, y1, ylim=c(0,10), xlab="n", ylab="t", type="line", main="Thời gian nếu vẽ bằng chuột")
plot(x, y2, ylim=c(0,10), xlab="n", ylab="t", type="line", main="Thời gian chụp + code")
plot(x, y3, ylim=c(0,10), xlab="n", ylab="t", type="line", main="Độ đẹp nếu vẽ bằng chuột")
plot(x, y4, ylim=c(0,10), xlab="n", ylab="t", type="line", main="Độ đẹp chụp + code")
x <- 1:10
y1 = rnorm(10, 8, 1)
y2 = c(10, 1, 1, 1, 1, 1, 1, 1, 1, 1)
y3 = rnorm(10, 1, 0.5)
y4 = rep(9, 10)
par(mfrow = c(2,2))
plot(x, y1, ylim=c(0,10), xlab="n", ylab="t", type="line", main="Thời gian nếu vẽ bằng chuột")
plot(x, y2, ylim=c(0,10), xlab="n", ylab="t", type="line", main="Thời gian chụp + code")
plot(x, y3, ylim=c(0,10), xlab="n", ylab="f", type="line", main="Độ đẹp nếu vẽ bằng chuột")
plot(x, y4, ylim=c(0,10), xlab="n", ylab="f", type="line", main="Độ đẹp chụp + code")
x <- 1:10
y1 = rnorm(10, 8, 1)
y2 = c(10, 1, 1, 1, 1, 1, 1, 1, 1, 1)
y3 = rnorm(10, 1, 0.5)
y4 = rep(9, 10)
par(mfrow = c(2,2))
plot(x, y1, ylim=c(0,10), xlab="Số lần ký", ylab="t", type="line", main="Thời gian nếu vẽ bằng chuột")
plot(x, y2, ylim=c(0,10), xlab="Số lần ký", ylab="t", type="line", main="Thời gian chụp + code")
plot(x, y3, ylim=c(0,10), xlab="Số lần ký", ylab="f", type="line", main="Độ đẹp nếu vẽ bằng chuột")
plot(x, y4, ylim=c(0,10), xlab="Số lần ký", ylab="f", type="line", main="Độ đẹp chụp + code")
x <- 1:10
y1 = rnorm(10, 8, 1)
y2 = c(10, 1, 1, 1, 1, 1, 1, 1, 1, 1)
y3 = rnorm(10, 1, 0.5)
y4 = rep(9, 10)
par(mfrow = c(2,2))
plot(x, y1, ylim=c(0,10), xlab="Số lần ký", ylab="t", type="line", main="Thời gian nếu vẽ bằng chuột")
plot(x, y2, ylim=c(0,10), xlab="Số lần ký", ylab="t", type="line", main="Thời gian chụp + code")
plot(x, y3, ylim=c(0,10), xlab="Số lần ký", ylab="f", type="line", main="Độ đẹp nếu vẽ bằng chuột")
plot(x, y4, ylim=c(0,10), xlab="Số lần ký", ylab="f", type="line", main="Độ đẹp chụp + code")
x <- 1:10
y1 = rnorm(10, 8, 1)
y2 = c(10, 1, 1, 1, 1, 1, 1, 1, 1, 1)
y3 = rnorm(10, 1, 0.5)
y4 = rep(9, 10)
par(mfrow = c(2,3))
plot(x, y1, ylim=c(0,10), xlab="Số lần ký", ylab="t", type="line", main="Thời gian nếu vẽ bằng chuột")
plot(x, y2, ylim=c(0,10), xlab="Số lần ký", ylab="t", type="line", main="Thời gian chụp + code")
plot(x, y3, ylim=c(0,10), xlab="Số lần ký", ylab="f", type="line", main="Độ đẹp nếu vẽ bằng chuột")
plot(x, y4, ylim=c(0,10), xlab="Số lần ký", ylab="f", type="line", main="Độ đẹp chụp + code")
x <- 1:10
y1 = rnorm(10, 8, 1)
y2 = c(10, 1, 1, 1, 1, 1, 1, 1, 1, 1)
y3 = rnorm(10, 1, 0.5)
y4 = rep(9, 10)
par(mfrow = c(2,2))
plot(x, y1, ylim=c(0,10), xlab="Số lần ký", ylab="t", type="line", main="Thời gian nếu vẽ bằng chuột")
plot(x, y2, ylim=c(0,10), xlab="Số lần ký", ylab="t", type="line", main="Thời gian chụp + code")
plot(x, y3, ylim=c(0,10), xlab="Số lần ký", ylab="f", type="line", main="Độ đẹp nếu vẽ bằng chuột")
plot(x, y4, ylim=c(0,10), xlab="Số lần ký", ylab="f", type="line", main="Độ đẹp chụp + code")
plot(pvals, dbinom(7, 8, pvals)/dbinom(7, 8, 7/8), lwd = 3, frame = FALSE, type = "l",
xlab = "p", ylab = "likelihood")
n <- 5
pvals <- seq(0, 1, length = 1000)
plot(c(0, 1), c(0, 1.2), type = "n", frame = FALSE, xlab = "p", ylab = "likelihood")
text((0 : n) /n, 1.1, as.character(0 : n))
sapply(0 : n, function(x) {
phat <- x / n
if (x == 0) lines(pvals,  ( (1 - pvals) / (1 - phat) )^(n-x), lwd = 3)
else if (x == n) lines(pvals, (pvals / phat) ^ x, lwd = 3)
else lines(pvals, (pvals / phat ) ^ x * ( (1 - pvals) / (1 - phat) ) ^ (n-x), lwd = 3)
}
)
title(paste("Likelihoods for n = ", n))
n <- 5
pvals <- seq(0, 1, length = 1000)
plot(c(0, 1), c(0, 1.2), type = "n", frame = FALSE, xlab = "p", ylab = "likelihood")
text((0 : n) /n, 1.1, as.character(0 : n))
sapply(0 : n, function(x) {
phat <- x / n
if (x == 0) lines(pvals,  ( (1 - pvals) / (1 - phat) )^(n-x), lwd = 3)
else if (x == n) lines(pvals, (pvals / phat) ^ x, lwd = 3)
else lines(pvals, (pvals / phat ) ^ x * ( (1 - pvals) / (1 - phat) ) ^ (n-x), lwd = 3)
}
)
title(paste("Likelihoods for n = ", n))
plot(pvals, dbinom(7, 8, pvals)/dbinom(7, 8, 7/8), lwd = 3, frame = FALSE, type = "l",
xlab = "p", ylab = "likelihood")
zvals <- seq(-3, 3, length = 1000)
plot(zvals, dnorm(zvals), type = "l", lwd = 3, frame = FALSE, xlab = "z", ylab = "Density")
sapply(-3:3, function(k) abline(v = k))
(0.8 - 0.7) / (0.2)
0.75 * 0.3 / ( 0.75 * 0.3 + (1 - 0.52) * 0.7)
?pnorm
dnorm(70, mean = 80, sd = 10)
qnorm(70, mean = 80, sd = 10)
dnorm(70, mean = 80, sd = 10)
(100 - 35) / 2
(100 - 65) / 2
dnorm(80, mean = 80, sd = 10)
pnorm(80, mean = 80, sd = 10)
pnorm(70, mean = 80, sd = 10)
qnorm(0.95, mean = 1100, sd = 75)
qnorm(0.95, mean = 1100, sd = 7.5)
?pbinom
dbinom(4, size = 5, prob = 0.5)
dbinom(4, size = 5, prob = 0.5) + dbinom(5, size = 5, prob = 0.5)
1 / 12
1 / 12 / sqrt(10)
1 / 12 / sqrt(100)
?ppois
ppois(10, lambda = 5 * 3)
ppois(10.5, lambda = 5 * 3)
ppois(11, lambda = 5 * 3)
?choose
choose(9, 3)
getwd()
setwd("/home/rr/Coursera/ReproducibleResearch/RepData_PeerAssessment1/")
set.seed(0)
activity <- read.csv("activity.csv")
activity$datetime <- strptime(activity$date, format = "%Y-%m-%d")
summary(activity)
total_steps <- tapply(activity$steps, activity$date, sum, na.rm = T)
hist(total_steps,
xlab = "Steps",
ylab = "Number of days",
main = "Total number of steps per day")
mean(total_steps)
median(total_steps)
interval_avg <- tapply(activity$steps, activity$interval, mean, na.rm = T)
plot(interval_avg,
main="Average daily activity",
xlab="5-minute interval",
ylab="Average number of steps",
type="l")
interval_avg[interval_avg == max(interval_avg)]
sum(is.na(activity$steps))
activity_imputed <- activity
missing <- is.na(activity$steps)
activity_imputed$steps[missing] <-
interval_avg[as.character(activity$interval[missing])]
total_steps <- tapply(activity_imputed$steps, activity_imputed$date, sum)
hist(total_steps,
xlab = "steps",
ylab = "number of days",
main = "Total number of steps per day")
mean(total_steps)
median(total_steps)
activity_imputed$weekday <- weekdays(activity_imputed$datetime)
activity_imputed$weekday <- ifelse(
(activity_imputed$weekday == "Saturday")
| (activity_imputed$weekday == "Sunday"),
"weekend",
"weekday")
activity_imputed$weekday <- factor(activity_imputed$weekday)
library(lattice)
activity_weekday = activity_imputed[activity_imputed$weekday == "weekday",]
activity_weekend = activity_imputed[activity_imputed$weekday == "weekend",]
interval_avg_weekday <- tapply(activity_weekday$steps,
activity_weekday$interval,
mean)
interval_avg_weekend <- tapply(activity_weekend$steps,
activity_weekend$interval,
mean)
avg <- data.frame(
c(interval_avg_weekday, interval_avg_weekend),
c(unique(activity_weekday$interval),
unique(activity_weekend$interval)),
c(rep("weekday", length(interval_avg_weekday)),
rep("weekend", length(interval_avg_weekend))),
)
avg <- data.frame(
c(interval_avg_weekday, interval_avg_weekend),
c(unique(activity_weekday$interval),
unique(activity_weekend$interval)),
c(rep("weekday", length(interval_avg_weekday)),
rep("weekend", length(interval_avg_weekend)))
)
colnames(avg) <- c("steps", "interval", "weekday")
xyplot(steps ~ interval | weekday,
data = avg,
layout=c(1,2),
xlab="Interval",
ylab="Number of steps",
type="l")
getwd()
setwd("/home/rr/Coursera/ReproducibleResearch/Ass2")
getwd()
getwd()
setwd("/home/rr/Coursera/ReproducibleResearch/Ass2")
getwd()
?download.file
storm_data <- read.table(
bzfile("storm.bz2", open = "r"),
header = TRUE,
sep = ",")
storm_data_raw <- read.table(
bzfile("storm.bz2", open = "r"),
header = TRUE,
sep = ",")
good_columns <- c("EVTYPE", "FATALITIES", "INJURIES", "PROPDMG",
"PROPDMGEXP", "CROPDMG", "CROPDMGEXP")
storm_data_clean <- storm_data_raw[,good_columns]
summary(storm_data_clean)
str(storm_data_raw)
storm_data <- storm_data_raw[,good_columns]
summary(storm_data)
remove(storm_data_clean)
remove(storm_data_raw)
str(storm_data$PROPDMGEXP)
storm_data$PROPDMGEXP
str(storm_data$PROPDMGEXP)
factor(storm_data$PROPDMGEXP)
levels(storm_data$PROPDMGEXP)
storm_data_raw
storm_data_bz <- bzfile("repdata-data-StormData.csv.bz2", open = "r")
storm_data_raw <- read.table(storm_data_bz, header = TRUE, sep = ",")
